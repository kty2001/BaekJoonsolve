from collections import deque
import sys
input = sys.stdin.readline

dx = [-2, -2, -1, -1, 1, 1, 2, 2]
dy = [-1, 1, -2, 2, -2, 2, -1, 1]

def bfs(start_x, start_y):
  dq = deque()
  dq.append([start_x, start_y])
  while dq:
    x, y = dq.popleft()
    if x == desti_x and y == desti_y:
      return board[x][y]
    for i in range(8):
      nx = x + dx[i]
      ny = y + dy[i]
      if 0 <= nx < n and 0 <= ny < n and board[nx][ny] == 0:
        dq.append([nx, ny])
        board[nx][ny] = board[x][y] + 1

t = int(input())
for _ in range(t):
  n = int(input())
  start_x, start_y = map(int, input().split())
  desti_x, desti_y = map(int, input().split())
  board = [[0 for _ in range(n)] for _ in range(n)]
  
  print(bfs(start_x, start_y))