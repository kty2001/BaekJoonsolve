from collections import deque

dx = [1, -1, 0, 0]
dy = [0, 0, 1, -1]

def bfs():
  dq = deque()
  dq.append([0, 0])
  while dq:
    x, y = dq.popleft()
    if x == n-1 and y == m-1:
      return graph[n-1][m-1]
    for i in range(4):
      nx = x + dx[i]
      ny = y + dy[i]
      if nx < 0 or nx > n-1 or ny < 0 or ny > m-1:
        continue
      else:
        if graph[nx][ny] == 1:
          graph[nx][ny] = graph[x][y] + 1
          dq.append([nx, ny])

n, m = map(int, input().split())
graph = []
for i in range(n):
  graph.append(list(map(int, input())))

print(bfs())